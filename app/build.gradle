plugins {
   id 'com.android.application'
    id 'com.google.gms.google-services'
}


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    configurations.all {
        resolutionStrategy.dependencySubstitution {
            substitute module('org.hamcrest:hamcrest-core:1.1') with module('junit:junit:4.10')




        }
    }

    applicationVariants.all { variant ->
        // Return compile configuration objects of a variant.
        variant.getCompileConfiguration().resolutionStrategy {
            // Use Gradle's ResolutionStrategy API
            // to customize how this variant resolves dependencies.

/*
            dependencySubstitution {
                substitute module('org.gradle:api') using project(':api')
                substitute project(':util') using module('org.gradle:util:3.0')
            }

*/



        }
        // Return runtime configuration objects of a variant.
        variant.getRuntimeConfiguration().resolutionStrategy {

        }
        // Return annotation processor configuration of a variant.
        variant.getAnnotationProcessorConfiguration().resolutionStrategy {

        }
    }


    defaultConfig {

        applicationId "com.tiburela.TriviasMedicas"
        minSdkVersion 21
        targetSdkVersion 31
        multiDexEnabled true
        versionCode 7
        versionName "4.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true;
            shrinkResources true;
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    /*configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // prefer modules that are part of this build (multi-project or composite build) over external modules
            preferProjectModules()

            // force certain versions of dependencies (including transitive)
            //  *append new forced modules:
            force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
            //  *replace existing forced modules with new ones:
            forcedModules = ['asm:asm-all:3.3.1']

            // add dependency substitution rules
            dependencySubstitution {
                substitute module('org.gradle:api') using project(':api')
                substitute project(':util') using module('org.gradle:util:3.0')
            }

            // cache dynamic versions for 10 minutes
            cacheDynamicVersionsFor 10*60, 'seconds'
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    */
    configurations {
        all { // You should exclude one of them not both of them
          //  exclude group: "com.android.support", module: "support-core-ui"
         //   exclude group: "com.android.support", module: "support-compat"
       ///   exclude class: "com.google.android.gms.internal.measurement.zzbs"
           // exclude group: "com.google.android.gms", module: "play-services-measurement-impl" //eliminado
           // exclude group: "com.google.android.gms" , module: "play-services-measurement"
          // exclude  group: "com.google.guava"       , module:   "guava"
           // exclude group: "com.google.guava" , module: "listenablefuture"

        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.android.support:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.firebase:firebase-auth:21.0.1'//auth de firebase
    implementation 'com.google.firebase:firebase-database:20.0.2'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'org.testng:testng:6.9.6'
    testImplementation 'junit:junit:4.+'
    implementation 'com.google.android.material:material:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation platform('com.google.firebase:firebase-bom:28.4.1')//firebase
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    implementation'com.airbnb.android:lottie:3.4.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.google.android.play:core:1.10.1'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-ads:20.4.0'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

}